name: .NET Build, Test, and Coverage

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.0'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Debug

    - name: Run tests with coverage
      run: dotnet test --no-build --configuration Debug --collect:"XPlat Code Coverage"

    - name: Generate coverage report
      run: reportgenerator -reports:**/coverage.cobertura.xml -targetdir:CoverageReport -reporttypes:Html

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: CoverageReport

    - name: Validate coverage (optional)
      run: |
        COVERAGE_THRESHOLD=80
        COVERAGE=$(grep -Po 'line-rate="\K[0-9]+\.[0-9]+' CoverageReport/Cobertura.xml)
        COVERAGE_INT=${COVERAGE%%.*}
        if [ "$COVERAGE_INT" -lt "$COVERAGE_THRESHOLD" ]; then
          echo "Code coverage ($COVERAGE%) is below the threshold ($COVERAGE_THRESHOLD%)"
          exit 1
        else
          echo "Code coverage ($COVERAGE%) meets the threshold ($COVERAGE_THRESHOLD%)"
        fi
