name: .NET Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build & Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --collect:"XPlat Code Coverage" --results-directory coverage

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/**/*.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ github.event_name == 'pull_request' }}
      with:
        recreate: true
        path: code-coverage-results.md
    
  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Install Nerdbank.GitVersioning Tool
        run: dotnet tool install --global nbgv

      - name: Restore Nerdbank.GitVersioning Version Info
        run: nbgv get-version --format json > version.json

      - name: Extract Version Number
        id: get_version
        run: echo "##[set-output name=version;]$(jq -r '.CloudBuildVersionVars.NuGetPackageVersion' version.json)"

      - name: Pack NuGet package
        run: |
             dotnet restore
             dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutput=../../test-results /p:CoverletOutputFormat=lcov
             dotnet pack src/EasyChain/EasyChain.csproj -c Release -p:Version=${{ steps.get_version.outputs.version }} --no-restore

      - name: Publish Test Coverage Report to Coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./test-results.info

      - name: Find and push NuGet package
        run: |
          # Find the .nupkg file
          PACKAGE_FILE=$(find src/EasyChain/bin/Release -name '*.nupkg')
          
          # Check if the file exists
          if [ -z "$PACKAGE_FILE" ]; then
            echo "No .nupkg file found!"
            exit 1
          fi
      
          # Push the package
          dotnet nuget push "$PACKAGE_FILE" -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
